{
    "bookDetail": {
        "actionID": "bookDetail",
        "parserID": "DOM"
    },
    "weight": "9990",
    "miniAppVersion": "2.53.2",
    "chapterList": {
        "actionID": "chapterList",
        "validConfig": "",
        "title": "//a/@title",
        "host": "https://www.mhgui.com",
        "list": "//div[@class=\"chapter-list cf mt10\"][1]//ul/li ||@js:\nreturn result.reverse();",
        "responseFormatType": "html",
        "parserID": "DOM",
        "url": "//a/@href"
    },
    "searchShudan": {
        "actionID": "searchShudan",
        "parserID": "DOM"
    },
    "relatedWord": {
        "actionID": "relatedWord",
        "parserID": "DOM"
    },
    "enable": 1,
    "sourceType": "comic",
    "sourceName": "MH柜",
    "sourceUrl": "https://www.mhgui.com",
    "shudanDetail": {
        "actionID": "shudanDetail",
        "parserID": "DOM"
    },
    "lastModifyTime": "1635855176.868420",
    "searchBook": {
        "cat": "//div[@class=\"book-detail\"]/dl/dd[2]/span[3]/a",
        "responseFormatType": "html",
        "lastChapterTitle": "//div[@class=\"book-cover\"]//span[@class=\"tt\"]",
        "author": "//div[@class=\"book-detail\"]/dl/dd[3]/span||@js:\nreturn result.replace(\"作者：\",\"\")",
        "bookName": "//div[@class=\"book-cover\"]/a/@title",
        "desc": "//div[@class=\"book-detail\"]//dd[@class=\"intro\"] ||@js:\nreturn result.replace(\"简介：\",\"\")",
        "requestInfo": "https://www.mhgui.com/s/%@keyWord_p%@pageIndex.html",
        "host": "https://www.mhgui.com",
        "actionID": "searchBook",
        "detailUrl": "//div[@class=\"book-cover\"]/a/@href",
        "cover": "//div[@class=\"book-cover\"]//img/@src",
        "validConfig": "",
        "parserID": "DOM",
        "list": "//div[@class=\"book-result\"]/ul/li",
        "status": "//div[@class=\"book-detail\"]/dl//span[@class=\"red\"]"
    },
    "chapterContent": {
        "validConfig": "",
        "parserID": "DOM",
        "host": "https://www.mhgui.com",
        "content": "@js: \nvar LZString = (function() {\n    var f = String.fromCharCode;\n    var keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    var baseReverseDic = {};\n    function getBaseValue(alphabet, character) {\n        if (!baseReverseDic[alphabet]) {\n            baseReverseDic[alphabet] = {};\n            for (var i = 0; i < alphabet.length; i++) {\n                baseReverseDic[alphabet][alphabet.charAt(i)] = i\n            }\n        }\n        return baseReverseDic[alphabet][character]\n    }\n    var LZString = {\n        decompressFromBase64: function(input) {\n            if (input == null)\n                return \"\";\n            if (input == \"\")\n                return null;\n            return LZString._0(input.length, 32, function(index) {\n                return getBaseValue(keyStrBase64, input.charAt(index))\n            })\n        },\n        _0: function(length, resetValue, getNextValue) {\n            var dictionary = [], next, enlargeIn = 4, dictSize = 4, numBits = 3, entry = \"\", result = [], i, w, bits, resb, maxpower, power, c, data = {\n                val: getNextValue(0),\n                position: resetValue,\n                index: 1\n            };\n            for (i = 0; i < 3; i += 1) {\n                dictionary[i] = i\n            }\n            bits = 0;\n            maxpower = Math.pow(2, 2);\n            power = 1;\n            while (power != maxpower) {\n                resb = data.val & data.position;\n                data.position >>= 1;\n                if (data.position == 0) {\n                    data.position = resetValue;\n                    data.val = getNextValue(data.index++)\n                }\n                bits |= (resb > 0 ? 1 : 0) * power;\n                power <<= 1\n            }\n            switch (next = bits) {\n            case 0:\n                bits = 0;\n                maxpower = Math.pow(2, 8);\n                power = 1;\n                while (power != maxpower) {\n                    resb = data.val & data.position;\n                    data.position >>= 1;\n                    if (data.position == 0) {\n                        data.position = resetValue;\n                        data.val = getNextValue(data.index++)\n                    }\n                    bits |= (resb > 0 ? 1 : 0) * power;\n                    power <<= 1\n                }\n                c = f(bits);\n                break;\n            case 1:\n                bits = 0;\n                maxpower = Math.pow(2, 16);\n                power = 1;\n                while (power != maxpower) {\n                    resb = data.val & data.position;\n                    data.position >>= 1;\n                    if (data.position == 0) {\n                        data.position = resetValue;\n                        data.val = getNextValue(data.index++)\n                    }\n                    bits |= (resb > 0 ? 1 : 0) * power;\n                    power <<= 1\n                }\n                c = f(bits);\n                break;\n            case 2:\n                return \"\"\n            }\n            dictionary[3] = c;\n            w = c;\n            result.push(c);\n            while (true) {\n                if (data.index > length) {\n                    return \"\"\n                }\n                bits = 0;\n                maxpower = Math.pow(2, numBits);\n                power = 1;\n                while (power != maxpower) {\n                    resb = data.val & data.position;\n                    data.position >>= 1;\n                    if (data.position == 0) {\n                        data.position = resetValue;\n                        data.val = getNextValue(data.index++)\n                    }\n                    bits |= (resb > 0 ? 1 : 0) * power;\n                    power <<= 1\n                }\n                switch (c = bits) {\n                case 0:\n                    bits = 0;\n                    maxpower = Math.pow(2, 8);\n                    power = 1;\n                    while (power != maxpower) {\n                        resb = data.val & data.position;\n                        data.position >>= 1;\n                        if (data.position == 0) {\n                            data.position = resetValue;\n                            data.val = getNextValue(data.index++)\n                        }\n                        bits |= (resb > 0 ? 1 : 0) * power;\n                        power <<= 1\n                    }\n                    dictionary[dictSize++] = f(bits);\n                    c = dictSize - 1;\n                    enlargeIn--;\n                    break;\n                case 1:\n                    bits = 0;\n                    maxpower = Math.pow(2, 16);\n                    power = 1;\n                    while (power != maxpower) {\n                        resb = data.val & data.position;\n                        data.position >>= 1;\n                        if (data.position == 0) {\n                            data.position = resetValue;\n                            data.val = getNextValue(data.index++)\n                        }\n                        bits |= (resb > 0 ? 1 : 0) * power;\n                        power <<= 1\n                    }\n                    dictionary[dictSize++] = f(bits);\n                    c = dictSize - 1;\n                    enlargeIn--;\n                    break;\n                case 2:\n                    return result.join('')\n                }\n                if (enlargeIn == 0) {\n                    enlargeIn = Math.pow(2, numBits);\n                    numBits++\n                }\n                if (dictionary[c]) {\n                    entry = dictionary[c]\n                } else {\n                    if (c === dictSize) {\n                        entry = w + w.charAt(0)\n                    } else {\n                        return null\n                    }\n                }\n                result.push(entry);\n                dictionary[dictSize++] = w + entry.charAt(0);\n                enlargeIn--;\n                w = entry;\n                if (enlargeIn == 0) {\n                    enlargeIn = Math.pow(2, numBits);\n                    numBits++\n                }\n            }\n        }\n    };\n    return LZString\n}\n)();\nString.prototype.splic = function(f) {\n    return LZString.decompressFromBase64(this).split(f)\n};\n\n\n\nvar a = \"(function(p,a,c,k,e,d)\" + result.split(\"(function(p,a,c,k,e,d)\")[1].split(\"{}))\")[0] + \"{}))\";\r\ra = eval(a);\r\rres = JSON.parse(a.replace(\"SMH.imgData(\",\"\").replace(\").preInit();\",\"\"));\n\n\n\n\n\n/*var a = result.match(/\\\\x6c\"\\]\\((.*?)\\) <\\/script/)[1];\nreturn a;\nres = JSON.parse(a.match(/imgData\\(({.*?)\\)/)[1]);\n// console.log(res)\n*/\n\nlet url = \"\";\nlet imgs = res['files'];\nlet former = \"https://i.hamreus.com\"+res['path'];\nlet sl = res['sl']\nfor(var i=0; i < imgs.length;i++){\n    let url_ = former+imgs[i]+'?e'+sl['e']+'&m='+sl['m'];\n    url = url + encodeURI(url_)+\"\\n\";\n\n}\n\nlet hh= {\r            \"UserAgent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36\",\r            \"referer\": config.host+params.queryInfo.url\r        };\nreturn JSON.stringify({'urls': url.split('\\n'), 'httpHeaders':hh});",
        "actionID": "chapterContent"
    },
    "shupingList": {
        "actionID": "shupingList",
        "parserID": "DOM"
    },
    "desc": "👾",
    "shudanList": {},
    "authorId": "",
    "bookWorld": {
        "分类": {
            "lastChapterTitle": "//a[@class=\"bcover\"]/span[@class=\"tt\"]",
            "responseFormatType": "html",
            "bookName": "//a[@class=\"bcover\"]/@title",
            "requestInfo": "@js:\nlet url = config.host+\"/list/\"+params.filters.area+params.filters.type +params.filters.order+\"/index_p\"+params.pageIndex+\".html\";\nurl = encodeURI(url);\nreturn url\nreturn {'url':url, 'webView':''};\n\nreturn {'url':url, 'cacheTime':3600}",
            "host": "https://www.mhgui.com",
            "actionID": "bookWorld",
            "detailUrl": "//a[@class=\"bcover\"]/@href",
            "moreKeys": {
                "pageSize": 5,
                "requestFilters": [
                    {
                        "key": "area",
                        "items": [
                            {
                                "title": "国内",
                                "value": "china"
                            },
                            {
                                "title": "港台",
                                "value": "hongkong"
                            },
                            {
                                "title": "欧美",
                                "value": "europe"
                            },
                            {
                                "title": "日本",
                                "value": "japan"
                            },
                            {
                                "title": "韩国",
                                "value": "korea"
                            },
                            {
                                "title": "其他",
                                "value": "other"
                            }
                        ]
                    },
                    {
                        "key": "type",
                        "items": [
                            {
                                "title": "全部",
                                "value": ""
                            },
                            {
                                "title": "冒险",
                                "value": "_maoxian"
                            },
                            {
                                "title": "热血",
                                "value": "_rexue"
                            },
                            {
                                "title": "神鬼",
                                "value": "_shengui"
                            },
                            {
                                "title": "武侠",
                                "value": "_wuxia"
                            },
                            {
                                "title": "格斗",
                                "value": "_gedou"
                            },
                            {
                                "title": "科幻",
                                "value": "_kehuan"
                            },
                            {
                                "title": "魔幻",
                                "value": "_mohuan"
                            },
                            {
                                "title": "推理",
                                "value": "_tuili"
                            },
                            {
                                "title": "社会",
                                "value": "_shehui"
                            },
                            {
                                "title": "生活",
                                "value": "_shenghuo"
                            },
                            {
                                "title": "搞笑",
                                "value": "_gaoxiao"
                            },
                            {
                                "title": "校园",
                                "value": "_xiaoyuan"
                            },
                            {
                                "title": "萌系",
                                "value": "_mengxi"
                            },
                            {
                                "title": "四格",
                                "value": "_sige"
                            },
                            {
                                "title": "后宫",
                                "value": "_hougong"
                            },
                            {
                                "title": "战争",
                                "value": "_zhanzheng"
                            },
                            {
                                "title": "历史",
                                "value": "_lishi"
                            },
                            {
                                "title": "宅男",
                                "value": "_zhainan"
                            },
                            {
                                "title": "竞技",
                                "value": "_jingji"
                            },
                            {
                                "title": "励志",
                                "value": "_lizhi"
                            },
                            {
                                "title": "治愈",
                                "value": "_zhiyu"
                            },
                            {
                                "title": "美食",
                                "value": "_meishi"
                            },
                            {
                                "title": "职场",
                                "value": "_zhichang"
                            },
                            {
                                "title": "悬疑",
                                "value": "_xuanyi"
                            },
                            {
                                "title": "黑道",
                                "value": "_heidao"
                            }
                        ]
                    },
                    {
                        "key": "order",
                        "items": [
                            {
                                "title": "全部",
                                "value": ""
                            },
                            {
                                "title": "连载中",
                                "value": "_lianzai"
                            },
                            {
                                "title": "已完结",
                                "value": "_wanjie"
                            }
                        ]
                    }
                ]
            },
            "validConfig": "",
            "cover": "//a[@class=\"bcover\"]/@href||@js:\n\nid=result.match(/(\\d+)/)[1];\n\nurl=\"https://cf.hamreus.com/cpic/b/\"+id+\".jpg\";\nreturn url;",
            "parserID": "DOM",
            "list": "//ul[@id=\"contList\"]/li",
            "status": "//span[@class=\"updateon\"]"
        }
    },
    "shupingHome": {
        "actionID": "shupingHome",
        "parserID": "DOM"
    }
}