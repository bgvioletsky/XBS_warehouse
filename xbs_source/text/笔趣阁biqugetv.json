{
    "chapterContent": {
        "validConfig": "",
        "actionID": "chapterContent",
        "JSParser": "function functionName(config, params, result) {\n  let fromIndex = result.lastIndexOf('<div id=\"nr\" class=\"nr_nr\">');\n  if (fromIndex === -1) {\n    return undefined;\n  }\n  let content = parseLabel(result, '<div id=\"nr1\">', '</div>', fromIndex);\n  if (!content) {\n    return undefined;\n  }\n  content = content.replace(/<br><br>/g, '\\n').replace(/<br>/g, '');\n  params.nativeTool.logWithKey(content, \"content\");\n\n  let maxPage = 1;\n  fromIndex = result.lastIndexOf('<span style=\"color:red\">');\n  if (fromIndex !== -1) {\n    let flagStr = parseLabel(result, ':red\">', '</span>', fromIndex);\n    if (flagStr) {\n      maxPage = parseInt(flagStr.match(/(\\(.+?\\))/g)[0].match(/(\\d+)/g)[1]);\n    }\n  }\n  params.nativeTool.logWithKey(maxPage, \"maxPage\");\n\n  let nextPageUrl = undefined;\n  fromIndex = result.lastIndexOf('<td class=\"next\">');\n  if (fromIndex !== -1) {\n    nextPageUrl = parseLabel(result, 'href=\"', '\">', fromIndex);\n  }\n  params.nativeTool.logWithKey(nextPageUrl, \"nextPageUrl\");\n  return {\n    'success': true,\n    'autoRequestMore': true,\n    'content': content,\n    'maxPage': maxPage,\n    'nextPageUrl': nextPageUrl\n  };\n}\n\nfunction parseLabel(source, startLabel, endLabel, fromIndex) {\n  let startIndex = source.indexOf(startLabel, fromIndex || 0);\n  let endIndex = source.indexOf(endLabel, startIndex);\n  if (startIndex === -1 || endIndex === -1) {\n    return undefined\n  }\n  return source.substring(startIndex + startLabel.length, endIndex);\n}",
        "requestInfo": "@js:\n\nreturn {\"url\":result, \"POST\":false, \"forbidCookie\":true, \"httpHeaders\":config.httpHeaders};",
        "host": "https://m.biqugetv.com",
        "httpHeaders": {
            "Referer": "https://m.biqugetv.com",
            "User-Agent": "Mozilla/5.0 (iPhone; CPU iPhone OS 10_3_1 like Mac OS X) AppleWebKit/603.1.30 (KHTML, like Gecko) Version/10.0 Mobile/14E304 Safari/602.1"
        },
        "parserID": "DOM"
    },
    "enable": 0,
    "shupingList": {
        "actionID": "shupingList",
        "parserID": "DOM"
    },
    "bookDetail": {
        "actionID": "bookDetail",
        "parserID": "DOM"
    },
    "authorId": "",
    "shudanList": {},
    "bookWorld": {
        "分类": {
            "author": "//div[@class='author']/text()|@replace:作者：",
            "lastChapterTitle": "//div[@class='update']/a",
            "responseFormatType": "html",
            "bookName": "//h4/i/a",
            "httpHeaders": {
                "Referer": "https://m.biqugetv.com",
                "User-Agent": "Mozilla/5.0 (iPhone; CPU iPhone OS 10_3_1 like Mac OS X) AppleWebKit/603.1.30 (KHTML, like Gecko) Version/10.0 Mobile/14E304 Safari/602.1"
            },
            "requestInfo": "@js:\n\nlet url = config.host + \"/xclass/\" + params.filters.type + \"/\" + params.pageIndex + \".html\";\nreturn {\"url\":url, \"POST\":false, \"forbidCookie\":true, \"httpHeaders\":config.httpHeaders};",
            "host": "https://m.biqugetv.com",
            "actionID": "bookWorld",
            "moreKeys": {
                "pageSize": 30,
                "requestFilters": [
                    {
                        "key": "type",
                        "items": [
                            {
                                "title": "玄幻",
                                "value": "1"
                            },
                            {
                                "title": "修真",
                                "value": "2"
                            },
                            {
                                "title": "都市",
                                "value": "3"
                            },
                            {
                                "title": "穿越",
                                "value": "4"
                            },
                            {
                                "title": "网游",
                                "value": "5"
                            },
                            {
                                "title": "科幻",
                                "value": "6"
                            },
                            {
                                "title": "其他",
                                "value": "7"
                            }
                        ]
                    }
                ]
            },
            "cover": "//div[@class='bookimg']/a/img/@src",
            "detailUrl": "//h4/i/a/@href",
            "list": "//div[@class='bookbox']",
            "_sIndex": 0,
            "parserID": "DOM",
            "desc": "//div[@class='intro_line']/text()",
            "validConfig": ""
        }
    },
    "sourceUrl": "https://m.biqugetv.com",
    "relatedWord": {
        "actionID": "relatedWord",
        "parserID": "DOM"
    },
    "weight": "1200",
    "sourceName": "笔趣阁biqugetv",
    "httpHeaders": {
        "Referer": "https://m.biqugetv.com",
        "User-Agent": "Mozilla/5.0 (iPhone; CPU iPhone OS 10_3_1 like Mac OS X) AppleWebKit/603.1.30 (KHTML, like Gecko) Version/10.0 Mobile/14E304 Safari/602.1"
    },
    "miniAppVersion": "2.53.2",
    "shudanDetail": {
        "actionID": "shudanDetail",
        "parserID": "DOM"
    },
    "lastModifyTime": "1647061887.719657",
    "shupingHome": {
        "actionID": "shupingHome",
        "parserID": "DOM"
    },
    "searchShudan": {
        "actionID": "searchShudan",
        "parserID": "DOM"
    },
    "searchBook": {
        "author": "//div[@class='author']|@replace:作者：",
        "lastChapterTitle": "//div[@class='update']/a",
        "responseFormatType": "html",
        "bookName": "//h4//a",
        "httpHeaders": {
            "Referer": "https://m.biqugetv.com",
            "User-Agent": "Mozilla/5.0 (iPhone; CPU iPhone OS 10_3_1 like Mac OS X) AppleWebKit/603.1.30 (KHTML, like Gecko) Version/10.0 Mobile/14E304 Safari/602.1"
        },
        "requestInfo": "@js:\n\nlet url = config.host + \"/search.php\";\nlet key = params.keyWord;\nlet hp = {\"keyword\":key, \"submit\":\"0\"};\n\nreturn {\"url\":url, \"POST\":false, \"forbidCookie\":true, \"httpHeaders\":config.httpHeaders, \"httpParams\":hp};",
        "host": "https://m.biqugetv.com",
        "actionID": "searchBook",
        "detailUrl": "//h4//a/@href",
        "cover": "//div[@class='bookimg']/a/@href",
        "validConfig": "",
        "list": "//div[@class='bookbox']",
        "parserID": "DOM",
        "desc": "//div[@class='intro_line']"
    },
    "chapterList": {
        "nextPageUrl": "//span[@class='right']/a/@href",
        "JSParser": "function functionName(config, params, result) {\n  let fromIndex = result.lastIndexOf('<ul class=\"chapter\">');\n  if (fromIndex === -1) {\n    return undefined;\n  }\n  let chapter = parseLabel(result, '<ul class=\"chapter\">', '</ul>', fromIndex);\n  if (!chapter) {\n    return undefined;\n  }\n\n  let arr = chapter.split('</li>');\n  if (!arr || arr.length === 0) {\n    return undefined;\n  }\n\n  let list = [];\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i].indexOf('</a>') === -1) {\n      continue;\n    }\n    list[i] = {\n      \"title\": parseLabel(arr[i], '\">', '</a>'),\n      \"url\": parseLabel(arr[i], '<a href=\"', '\">')\n    };\n  }\n\n  fromIndex = result.lastIndexOf('<span class=\"middle\">');\n  if (fromIndex === -1) {\n    return undefined;\n  }\n  let selectContent = parseLabel(result, 'options[selectedIndex].value\">', '</select>', fromIndex);\n  let maxPage = amountOfReg(selectContent, /<option/g);\n\n  fromIndex = result.lastIndexOf('<span class=\"right\">');\n  if (fromIndex === -1) {\n    return undefined;\n  }\n  let nextPageUrl = parseLabel(result, '<a href=\"/', '/\"', fromIndex);\n  if (nextPageUrl && nextPageUrl.length > 0) {\n    nextPageUrl = \"/\" + nextPageUrl + \"/\";\n  }\n\n  return {\n    \"success\": true,\n    \"maxPage\": maxPage,\n    \"autoRequestMore\": true,\n    \"nextPageUrl\": nextPageUrl,\n    \"list\": list\n  };\n}\n\nfunction parseLabel(source, startLabel, endLabel, fromIndex) {\n  let startIndex = source.indexOf(startLabel, fromIndex || 0);\n  let endIndex = source.indexOf(endLabel, startIndex);\n  if (startIndex === -1 || endIndex === -1) {\n    return undefined\n  }\n  return source.substring(startIndex + startLabel.length, endIndex);\n}\n\nfunction amountOfReg(source, target) {\n  let amount = 0;\n  source.replace(target, function (m, i) {\n    amount++;\n  });\n  return amount;\n}",
        "url": "//a/@href",
        "httpHeaders": {
            "Referer": "https://m.biqugetv.com",
            "User-Agent": "Mozilla/5.0 (iPhone; CPU iPhone OS 10_3_1 like Mac OS X) AppleWebKit/603.1.30 (KHTML, like Gecko) Version/10.0 Mobile/14E304 Safari/602.1"
        },
        "title": "//a",
        "host": "https://m.biqugetv.com",
        "actionID": "chapterList",
        "requestInfo": "@js:\n\nreturn {\"url\":result, \"POST\":false, \"forbidCookie\":true, \"httpHeaders\":config.httpHeaders};",
        "validConfig": "",
        "list": "//ul[@class='chapter'][2]/li",
        "parserID": "DOM",
        "updateTime": "//option[last()]/@value || @js:\nreturn result.match(/(\\d+)/g)[2];"
    },
    "sourceType": "text"
}