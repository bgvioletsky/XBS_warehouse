{
    "bookWorld": {
        "脱口秀": {
            "responseFormatType": "html",
            "bookName": "//span[2]/text()",
            "httpHeaders": {
                "Referer": "https://www.qtfm.cn",
                "Cookie": "Cookie: HWWAFSESID=2e8047924f0ac376c2; HWWAFSESTIME=1648450686512; qingting_id=7668753fc53c49b6b49d30d3fe877c04",
                "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.82 Safari/537.36"
            },
            "requestInfo": "@js:\n\nlet tag = '3251'//521 小说 3251脱口秀\n\n\nif(params.filters.type=='0' & params.filters.name ==0){\n    let url = config.host+\"/categories/\"+tag +\"/\"+params.filters.type+\"/\"+params.pageIndex;\n    return url;\n    // console.log(url);\n\n}else if(params.filters.type=='0' & params.filters.name !='0'){\n\n    let url = config.host+\"/categories/\"+tag +\"/\"+params.filters.name+\"/\"+params.pageIndex;\n    return url;\n    // console.log(url);\n}else if(params.filters.type!=0 & params.filters.name ==0){\n\n    let url = config.host+\"/categories/\"+tag +\"/\"+params.filters.type+\"/\"+params.pageIndex;\n    return url;\n    // console.log(url);\n}else{\n\n    let url = config.host+\"/categories/\"+tag +\"/\"+params.filters.type+\"-\"+params.filters.name+\"/\"+params.pageIndex;\n    return url;\n    // console.log(url);\n}",
            "host": "https://www.qtfm.cn",
            "actionID": "bookWorld",
            "moreKeys": {
                "pageSize": "10",
                "requestFilters": "type\n全部::0\n综艺::5653\n访谈::5654\n演讲::5655\n漫谈::5656\n\nname\n全部::0\n高晓松::5657\n梁宏达::5658\n王自健::5659\n雷鸣::5660\n崔永元::5703\n马未都::5704\n许知远::5705\n罗永浩::5706\n陈蓉::5707\n何炅::5708\n王嘉尔::5709\n胡锡进::5710\n鲁豫::5711\n重阳::5713\n罗振宇::5722\n窦文涛::5723\n杨澜::5725"
            },
            "detailUrl": "//a[@class=\"coverImg\"]/@href ||@js:\n\nlet id= result.match(/(\\d+)/)[1];\nlet url=config.host+\"/channels/\"+id+\"/\";\nreturn url",
            "cover": "//a[@class=\"coverImg\"]/img/@src",
            "list": "//div[@class=\"contentsContainer\"]/div",
            "parserID": "DOM",
            "desc": "//div[@class=\"desc line-clamp line-clamp-2\"]/text()",
            "validConfig": "",
            "_sIndex": 1
        },
        "小说": {
            "responseFormatType": "html",
            "bookName": "//span[2]/text()",
            "httpHeaders": {
                "Referer": "https://www.qtfm.cn",
                "Cookie": "Cookie: HWWAFSESID=2e8047924f0ac376c2; HWWAFSESTIME=1648450686512; qingting_id=7668753fc53c49b6b49d30d3fe877c04",
                "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.82 Safari/537.36"
            },
            "requestInfo": "@js:\n\nvar tag = '521'\n\nif(params.filters.type==0 &params.filters.value ==0){\n    var url = config.host+\"/categories/\"+tag +\"/\"+params.filters.type+\"/\"+params.pageIndex;\n    return url;\n\n}else if(params.filters.type=='0' & params.filters.value !='0'){\n\n    var url = config.host+\"/categories/\"+tag +\"/\"+params.filters.value+\"/\"+params.pageIndex;\n    return url;\n\n}else if(params.filters.type!='0' & params.filters.value =='0'){\n\n    var url = config.host+\"/categories/\"+tag +\"/\"+params.filters.type+\"/\"+params.pageIndex;\n    return url;\n}else{\n\n    var url = config.host+\"/categories/\"+tag +\"/\"+params.filters.type+\"-\"+params.filters.value+\"/\"+params.pageIndex;\n    return url;\n}",
            "host": "https://www.qtfm.cn",
            "actionID": "bookWorld",
            "moreKeys": {
                "pageSize": "5",
                "maxPage": "15",
                "requestFilters": [
                    {
                        "key": "type",
                        "items": [
                            {
                                "title": "全部",
                                "value": "0"
                            },
                            {
                                "title": "盗墓",
                                "value": "2741"
                            },
                            {
                                "title": "鬼故事",
                                "value": "4440"
                            },
                            {
                                "title": "官场爽文",
                                "value": "5961"
                            }
                        ]
                    },
                    {
                        "key": "value",
                        "items": [
                            {
                                "title": "全部",
                                "value": "0"
                            },
                            {
                                "title": "免费",
                                "value": "3554"
                            },
                            {
                                "title": "热门",
                                "value": "2174"
                            },
                            {
                                "title": "新书",
                                "value": "3632"
                            },
                            {
                                "title": "人气",
                                "value": "3326"
                            }
                        ]
                    }
                ]
            },
            "detailUrl": "//a[@class=\"coverImg\"]/@href ||@js:\n\nlet id= result.match(/(\\d+)/)[1];\nlet url=config.host+\"/channels/\"+id+\"/\";\nreturn url",
            "cover": "//a[@class=\"coverImg\"]/img/@src",
            "list": "//div[@class=\"contentsContainer\"]/div",
            "parserID": "DOM",
            "desc": "//div[@class=\"desc line-clamp line-clamp-2\"]/text()",
            "validConfig": "",
            "_sIndex": 0
        },
        "相声": {
            "responseFormatType": "html",
            "bookName": "//span[2]/text()",
            "httpHeaders": {
                "Referer": "https://www.qtfm.cn",
                "Cookie": "Cookie: HWWAFSESID=2e8047924f0ac376c2; HWWAFSESTIME=1648450686512; qingting_id=7668753fc53c49b6b49d30d3fe877c04",
                "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.82 Safari/537.36"
            },
            "requestInfo": "@js:\n\nlet tag = '527'//521 小说 3251脱口秀 527相声\n\n\n\n    let url = config.host+\"/categories/\"+tag +\"/\"+params.filters.type+\"/\"+params.pageIndex;\n\n    return url;",
            "host": "https://www.qtfm.cn",
            "actionID": "bookWorld",
            "moreKeys": {
                "pageSize": "10",
                "requestFilters": "type\n全部::0\n郭德纲::1522\n赵本山::1523\n刘宝瑞::2347\n岳云鹏::2354\n德云社::2383\n宋小宝::3338\n相声大师::3339\n小品达人::3340\n新锐演员::3341\n郭麒麟::5354\n张鹤伦::5355\n孟鹤堂::5356\n张云雷::5357\n"
            },
            "detailUrl": "//a[@class=\"coverImg\"]/@href ||@js:\n\nlet id= result.match(/(\\d+)/)[1];\nlet url=config.host+\"/channels/\"+id+\"/\";\nreturn url",
            "cover": "//a[@class=\"coverImg\"]/img/@src",
            "list": "//div[@class=\"contentsContainer\"]/div",
            "parserID": "DOM",
            "desc": "//div[@class=\"desc line-clamp line-clamp-2\"]/text()",
            "validConfig": "",
            "_sIndex": 2
        },
        "情感": {
            "responseFormatType": "html",
            "bookName": "//span[2]/text()",
            "httpHeaders": {
                "Referer": "https://www.qtfm.cn",
                "Cookie": "Cookie: HWWAFSESID=2e8047924f0ac376c2; HWWAFSESTIME=1648450686512; qingting_id=7668753fc53c49b6b49d30d3fe877c04",
                "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.82 Safari/537.36"
            },
            "requestInfo": "@js:\n\nlet tag = '529'//521 小说 3251脱口秀 529 情感\n\n\nif(params.filters.voice=='0' & params.filters.place ==0){\n    let url = config.host+\"/categories/\"+tag +\"/\"+params.filters.voice+\"/\"+params.pageIndex;\n    return url;\n \n\n}else if(params.filters.voice=='0' & params.filters.place !='0'){\n\n    let url = config.host+\"/categories/\"+tag +\"/\"+params.filters.place+\"/\"+params.pageIndex;\n    return url;\n  \n}else if(params.filters.voice!=0 & params.filters.place ==0){\n\n    let url = config.host+\"/categories/\"+tag +\"/\"+params.filters.voice+\"/\"+params.pageIndex;\n    return url;\n \n}else{\n\n    let url = config.host+\"/categories/\"+tag +\"/\"+params.filters.voice+\"-\"+params.filters.place+\"/\"+params.pageIndex;\n    return url;\n\n}",
            "host": "https://www.qtfm.cn",
            "actionID": "bookWorld",
            "moreKeys": {
                "pageSize": "10",
                "requestFilters": "voice\n全部::0\n男声::2143\n女声::2144\n其他::5717\n\nplace\n全部::0\n睡前::5661\n清晨::5662\n通勤::5663\n午后::5664\n看书::5665\n发呆::5666\n洗澡::5667\n家务::5668\n运动::5669\n"
            },
            "detailUrl": "//a[@class=\"coverImg\"]/@href ||@js:\n\nlet id= result.match(/(\\d+)/)[1];\nlet url=config.host+\"/channels/\"+id+\"/\";\nreturn url",
            "cover": "//a[@class=\"coverImg\"]/img/@src",
            "list": "//div[@class=\"contentsContainer\"]/div",
            "parserID": "DOM",
            "desc": "//div[@class=\"desc line-clamp line-clamp-2\"]/text()",
            "validConfig": "",
            "_sIndex": 7
        },
        "头条": {
            "responseFormatType": "html",
            "bookName": "//span[2]/text()",
            "httpHeaders": {
                "Referer": "https://www.qtfm.cn",
                "Cookie": "Cookie: HWWAFSESID=2e8047924f0ac376c2; HWWAFSESTIME=1648450686512; qingting_id=7668753fc53c49b6b49d30d3fe877c04",
                "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.82 Safari/537.36"
            },
            "requestInfo": "@js:\n\nlet tag = '545'//521 小说 3251脱口秀 527相声\n\n\n\n    let url = config.host+\"/categories/\"+tag +\"/\"+params.filters.type+\"/\"+params.pageIndex;\n\n    return url;",
            "host": "https://www.qtfm.cn",
            "actionID": "bookWorld",
            "moreKeys": {
                "pageSize": "10",
                "requestFilters": "type\n全部::0\n资讯::5345\n评论::5346\n知识::5347\n人物::5348\n杂谈::5349\n"
            },
            "detailUrl": "//a[@class=\"coverImg\"]/@href ||@js:\n\nlet id= result.match(/(\\d+)/)[1];\nlet url=config.host+\"/channels/\"+id+\"/\";\nreturn url",
            "cover": "//a[@class=\"coverImg\"]/img/@src",
            "list": "//div[@class=\"contentsContainer\"]/div",
            "parserID": "DOM",
            "desc": "//div[@class=\"desc line-clamp line-clamp-2\"]/text()",
            "validConfig": "",
            "_sIndex": 5
        },
        "评书": {
            "responseFormatType": "html",
            "bookName": "//span[2]/text()",
            "httpHeaders": {
                "Referer": "https://www.qtfm.cn",
                "Cookie": "Cookie: HWWAFSESID=2e8047924f0ac376c2; HWWAFSESTIME=1648450686512; qingting_id=7668753fc53c49b6b49d30d3fe877c04",
                "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.82 Safari/537.36"
            },
            "requestInfo": "@js:\n\nlet tag = '3496'//521 小说 3251脱口秀 527相声 3496评书\n\n\n\n    let url = config.host+\"/categories/\"+tag +\"/\"+params.filters.type+\"/\"+params.pageIndex;\n\n    return url;",
            "host": "https://www.qtfm.cn",
            "actionID": "bookWorld",
            "moreKeys": {
                "pageSize": "10",
                "requestFilters": "type\n 全部::0\n单田芳::5862\n刘兰芳::5632\n袁阔成::5633\n连丽如::5634\n赵亮::5855\n田连元::5637\n袁田::5857\n关勇超::5958\n姚传政::5856\n邵军荣::5643\n王玥波::5631\n李庆丰::5858\n赵维莉::5635\n张金山::5642\n石连君::5859\n田站义::5639\n王封臣::5860\n孙一::5638\n马长辉::5861\n"
            },
            "detailUrl": "//a[@class=\"coverImg\"]/@href ||@js:\n\nlet id= result.match(/(\\d+)/)[1];\nlet url=config.host+\"/channels/\"+id+\"/\";\nreturn url",
            "cover": "//a[@class=\"coverImg\"]/img/@src",
            "list": "//div[@class=\"contentsContainer\"]/div",
            "parserID": "DOM",
            "desc": "//div[@class=\"desc line-clamp line-clamp-2\"]/text()",
            "validConfig": "",
            "_sIndex": 6
        },
        "二次元": {
            "responseFormatType": "html",
            "bookName": "//span[2]/text()",
            "httpHeaders": {
                "Referer": "https://www.qtfm.cn",
                "Cookie": "Cookie: HWWAFSESID=2e8047924f0ac376c2; HWWAFSESTIME=1648450686512; qingting_id=7668753fc53c49b6b49d30d3fe877c04",
                "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.82 Safari/537.36"
            },
            "requestInfo": "@js:\n\nlet tag = '3427'//521 小说 3251脱口秀 527相声\n\n\n\n    let url = config.host+\"/categories/\"+tag +\"/\"+params.filters.type+\"/\"+params.pageIndex;\n\n    return url;",
            "host": "https://www.qtfm.cn",
            "actionID": "bookWorld",
            "moreKeys": {
                "pageSize": "10",
                "requestFilters": "type\n 全部::0\n资讯娱乐::2243\n电台::2244\n小说::2245\n音乐::2246\n广播剧::2247\n主播::2248\n原创::2249\n"
            },
            "detailUrl": "//a[@class=\"coverImg\"]/@href ||@js:\n\nlet id= result.match(/(\\d+)/)[1];\nlet url=config.host+\"/channels/\"+id+\"/\";\nreturn url",
            "cover": "//a[@class=\"coverImg\"]/img/@src",
            "list": "//div[@class=\"contentsContainer\"]/div",
            "parserID": "DOM",
            "desc": "//div[@class=\"desc line-clamp line-clamp-2\"]/text()",
            "validConfig": "",
            "_sIndex": 4
        },
        "历史": {
            "responseFormatType": "html",
            "bookName": "//span[2]/text()",
            "httpHeaders": {
                "Referer": "https://www.qtfm.cn",
                "Cookie": "Cookie: HWWAFSESID=2e8047924f0ac376c2; HWWAFSESTIME=1648450686512; qingting_id=7668753fc53c49b6b49d30d3fe877c04",
                "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.82 Safari/537.36"
            },
            "requestInfo": "@js:\n\nlet tag = '531'//521 小说 3251脱口秀 527相声\n//531 历史\n\n\n    let url = config.host+\"/categories/\"+tag +\"/\"+params.filters.type+\"/\"+params.pageIndex;\n\n    return url;",
            "host": "https://www.qtfm.cn",
            "actionID": "bookWorld",
            "moreKeys": {
                "pageSize": "10",
                "requestFilters": "type\n 全部::0\n热门必听::1674\n蜻蜓名家::2378\n百家讲坛::3542\n"
            },
            "detailUrl": "//a[@class=\"coverImg\"]/@href ||@js:\n\nlet id= result.match(/(\\d+)/)[1];\nlet url=config.host+\"/channels/\"+id+\"/\";\nreturn url",
            "cover": "//a[@class=\"coverImg\"]/img/@src",
            "list": "//div[@class=\"contentsContainer\"]/div",
            "parserID": "DOM",
            "desc": "//div[@class=\"desc line-clamp line-clamp-2\"]/text()",
            "validConfig": "",
            "_sIndex": 3
        }
    },
    "authorId": "",
    "weight": "9999",
    "miniAppVersion": "2.53.2",
    "chapterList": {
        "nextPageUrl": "@js:\n\nvar id= params.pageIndex +1;\n\nlet tag=params.queryInfo.detailUrl.match(/(\\d+)/)[1];//音频的id\n\nlet version = params.nativeTool.getCache(params.queryInfo.bookName);\n\nlet url = \"https://i.qtfm.cn/capi/channel/\"+tag+\"/programs/\"+version+\"?curpage=\"+id+\"&pagesize=\"+100+\"&order=asc\"\n\n\nreturn url ;",
        "responseFormatType": "json",
        "JSParser": "function functionName(config, params, result)\n{\n\n    if(!params.lastResponse){\n        \n        let name = params.queryInfo.bookName;\n        let pat = /\"version\":\"(.*?)\"/;\n        let version = result.match(pat)[1];//获取章节的音频版本\n        params.nativeTool.log(version);\n        params.nativeTool.setCache(name,String(version));//把version信息保存到key为书名的全局缓存中\n        /*\n        return { 'more': true, 'success': true, 'autoRequestMore': true ,'version':version};\n        */\n        return { 'more': true, 'success': true, 'autoRequestMore': true };\n\n    }\n    return result;\n}",
        "url": "id",
        "httpHeaders": {
            "Referer": "https://www.qtfm.cn",
            "Cookie": "Cookie: HWWAFSESID=2e8047924f0ac376c2; HWWAFSESTIME=1648450686512; qingting_id=7668753fc53c49b6b49d30d3fe877c04",
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.82 Safari/537.36"
        },
        "requestInfo": "@js:\n\nif(params.pageIndex==1){\n\n    return {'url':result,'httpHeaders':config.httpHeaders,\"POST\":false,\"cacheTime\":3600,'responseFormatType':''};\n\n\n}else{\n\n\n    let tag=params.queryInfo.detailUrl.match(/(\\d+)/)[1];\n\n    params.nativeTool.setCache(\"bookId\", String(tag));\n\n    let version = params.nativeTool.getCache(params.queryInfo.bookName);\n\n    //let version =params.lastResponse.version;\n    params.nativeTool.log(\"这是请求信息的version:\"+version);\n\n       let pageid = params.pageIndex-1;\n\n    let url = \"https://i.qtfm.cn/capi/channel/\"+tag+\"/programs/\"+version+\"?curpage=\"+pageid+\"&pagesize=\"+100+\"&order=asc\";\n\n\n    return {'url':url,'httpHeaders':config.httpHeaders,\"POST\":false,\"cacheTime\":3600,'responseFormatType':'json'};\n\n}",
        "title": "title",
        "actionID": "chapterList",
        "moreKeys": {
            "maxPage": 50
        },
        "host": "https://www.qtfm.cn",
        "validConfig": "",
        "list": "data/programs",
        "parserID": "DOM"
    },
    "searchShudan": {
        "actionID": "searchShudan",
        "parserID": "DOM"
    },
    "relatedWord": {
        "actionID": "relatedWord",
        "parserID": "DOM"
    },
    "enable": 0,
    "sourceName": "👾DragonFlyFm",
    "sourceType": "audio",
    "sourceUrl": "https://www.qtfm.cn",
    "httpHeaders": {
        "Referer": "https://www.qtfm.cn",
        "Cookie": "Cookie: HWWAFSESID=2e8047924f0ac376c2; HWWAFSESTIME=1648450686512; qingting_id=7668753fc53c49b6b49d30d3fe877c04",
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.82 Safari/537.36"
    },
    "shudanDetail": {
        "actionID": "shudanDetail",
        "parserID": "DOM"
    },
    "lastModifyTime": "1650800503.353646",
    "searchBook": {
        "responseFormatType": "json",
        "bookName": "title",
        "httpHeaders": {
            "Referer": "https://www.qtfm.cn",
            "Cookie": "Cookie: HWWAFSESID=2e8047924f0ac376c2; HWWAFSESTIME=1648450686512; qingting_id=7668753fc53c49b6b49d30d3fe877c04",
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.82 Safari/537.36"
        },
        "requestInfo": "@js:\n\nlet url= \"https://search.qtfm.cn/v3/search\";\n\nlet hp = {\n    \"categoryid\":\"0\",\n    \"k\":params.keyWord,\n    \"page\":params.pageIndex,\n    \"pagesize\":\"15\",\n    \"include\":\"channel_ondemand\"\n}\n\nreturn {'url':url, 'httpParams':hp ,'httpHeaders':config.httpHeaders,\"POST\":false,\"cacheTime\":3600};",
        "host": "https://www.qtfm.cn",
        "actionID": "searchBook",
        "detailUrl": "id||@js:\n\n\nlet url=config.host+\"/channels/\"+result+\"/\";\nreturn url",
        "moreKeys": {
            "maxPage": 10
        },
        "cover": "cover",
        "list": "data/data/docs",
        "parserID": "DOM",
        "validConfig": "",
        "status": "podcaster"
    },
    "chapterContent": {
        "actionID": "chapterContent",
        "content": "@js:\n\nreturn params.responseUrl",
        "validConfig": "",
        "requestInfo": "@js:\n\nvar CryptoJS = CryptoJS || function(q, r) {\r    var k = {},\r        g = k.lib = {},\r        p = function() {},\r        t = g.Base = {\r            extend: function(b) {\r                p.prototype = this;\r                var j = new p;\r                b && j.mixIn(b);\r                j.hasOwnProperty(\"init\") || (j.init = function() {\r                    j.$super.init.apply(this, arguments)\r                });\r                j.init.prototype = j;\r                j.$super = this;\r                return j\r            },\r            create: function() {\r                var b = this.extend();\r                b.init.apply(b, arguments);\r                return b\r            },\r            init: function() {},\r            mixIn: function(b) {\r                for (var j in b) b.hasOwnProperty(j) && (this[j] = b[j]);\r                b.hasOwnProperty(\"toString\") && (this.toString = b.toString)\r            },\r            clone: function() {\r                return this.init.prototype.extend(this)\r            }\r        },\r        n = g.WordArray = t.extend({\r            init: function(b, j) {\r                b = this.words = b || [];\r                this.sigBytes = j != r ? j : 4 * b.length\r            },\r            toString: function(b) {\r                return (b || u).stringify(this)\r            },\r            concat: function(b) {\r                var j = this.words,\r                    a = b.words,\r                    l = this.sigBytes;\r                b = b.sigBytes;\r                this.clamp();\r                if (l % 4)\r                    for (var h = 0; h < b; h++) j[l + h >>> 2] |= (a[h >>> 2] >>> 24 - 8 * (h % 4) & 255) << 24 - 8 * ((l + h) % 4);\r                else if (65535 < a.length)\r                    for (h = 0; h < b; h += 4) j[l + h >>> 2] = a[h >>> 2];\r                else j.push.apply(j, a);\r                this.sigBytes += b;\r                return this\r            },\r            clamp: function() {\r                var b = this.words,\r                    j = this.sigBytes;\r                b[j >>> 2] &= 4294967295 <<\r                    32 - 8 * (j % 4);\r                b.length = q.ceil(j / 4)\r            },\r            clone: function() {\r                var b = t.clone.call(this);\r                b.words = this.words.slice(0);\r                return b\r            },\r            random: function(b) {\r                for (var j = [], a = 0; a < b; a += 4) j.push(4294967296 * q.random() | 0);\r                return new n.init(j, b)\r            }\r        }),\r        v = k.enc = {},\r        u = v.Hex = {\r            stringify: function(b) {\r                var a = b.words;\r                b = b.sigBytes;\r                for (var h = [], l = 0; l < b; l++) {\r                    var m = a[l >>> 2] >>> 24 - 8 * (l % 4) & 255;\r                    h.push((m >>> 4).toString(16));\r                    h.push((m & 15).toString(16))\r                }\r                return h.join(\"\")\r            },\r            parse: function(b) {\r                for (var a = b.length, h = [], l = 0; l < a; l += 2) h[l >>> 3] |= parseInt(b.substr(l,\r                    2), 16) << 24 - 4 * (l % 8);\r                return new n.init(h, a / 2)\r            }\r        },\r        a = v.Latin1 = {\r            stringify: function(b) {\r                var a = b.words;\r                b = b.sigBytes;\r                for (var h = [], l = 0; l < b; l++) h.push(String.fromCharCode(a[l >>> 2] >>> 24 - 8 * (l % 4) & 255));\r                return h.join(\"\")\r            },\r            parse: function(b) {\r                for (var a = b.length, h = [], l = 0; l < a; l++) h[l >>> 2] |= (b.charCodeAt(l) & 255) << 24 - 8 * (l % 4);\r                return new n.init(h, a)\r            }\r        },\r        s = v.Utf8 = {\r            stringify: function(b) {\r                try {\r                    return decodeURIComponent(escape(a.stringify(b)))\r                } catch (h) {\r                    throw Error(\"Malformed UTF-8 data\");\r                }\r            },\r            parse: function(b) {\r                return a.parse(unescape(encodeURIComponent(b)))\r            }\r        },\r        h = g.BufferedBlockAlgorithm = t.extend({\r            reset: function() {\r                this._data = new n.init;\r                this._nDataBytes = 0\r            },\r            _append: function(b) {\r                \"string\" == typeof b && (b = s.parse(b));\r                this._data.concat(b);\r                this._nDataBytes += b.sigBytes\r            },\r            _process: function(b) {\r                var a = this._data,\r                    h = a.words,\r                    l = a.sigBytes,\r                    m = this.blockSize,\r                    k = l / (4 * m),\r                    k = b ? q.ceil(k) : q.max((k | 0) - this._minBufferSize, 0);\r                b = k * m;\r                l = q.min(4 * b, l);\r                if (b) {\r                    for (var g = 0; g < b; g += m) this._doProcessBlock(h, g);\r                    g = h.splice(0, b);\r                    a.sigBytes -= l\r                }\r                return new n.init(g, l)\r            },\r            clone: function() {\r                var b = t.clone.call(this);\r                b._data = this._data.clone();\r                return b\r            },\r            _minBufferSize: 0\r        });\r    g.Hasher = h.extend({\r        cfg: t.extend(),\r        init: function(b) {\r            this.cfg = this.cfg.extend(b);\r            this.reset()\r        },\r        reset: function() {\r            h.reset.call(this);\r            this._doReset()\r        },\r        update: function(b) {\r            this._append(b);\r            this._process();\r            return this\r        },\r        finalize: function(b) {\r            b && this._append(b);\r            return this._doFinalize()\r        },\r        blockSize: 16,\r        _createHelper: function(b) {\r            return function(a, h) {\r                return (new b.init(h)).finalize(a)\r            }\r        },\r        _createHmacHelper: function(b) {\r            return function(a, h) {\r                return (new m.HMAC.init(b,\r                    h)).finalize(a)\r            }\r        }\r    });\r    var m = k.algo = {};\r    return k\r}(Math);\r(function(q) {\r    function r(a, m, b, j, g, l, k) {\r        a = a + (m & b | ~m & j) + g + k;\r        return (a << l | a >>> 32 - l) + m\r    }\r\r    function k(a, m, b, j, g, l, k) {\r        a = a + (m & j | b & ~j) + g + k;\r        return (a << l | a >>> 32 - l) + m\r    }\r\r    function g(a, m, b, j, g, l, k) {\r        a = a + (m ^ b ^ j) + g + k;\r        return (a << l | a >>> 32 - l) + m\r    }\r\r    function p(a, g, b, j, k, l, p) {\r        a = a + (b ^ (g | ~j)) + k + p;\r        return (a << l | a >>> 32 - l) + g\r    }\r    for (var t = CryptoJS, n = t.lib, v = n.WordArray, u = n.Hasher, n = t.algo, a = [], s = 0; 64 > s; s++) a[s] = 4294967296 * q.abs(q.sin(s + 1)) | 0;\r    n = n.MD5 = u.extend({\r        _doReset: function() {\r            this._hash = new v.init([1732584193, 4023233417, 2562383102, 271733878])\r        },\r        _doProcessBlock: function(h, m) {\r            for (var b = 0; 16 > b; b++) {\r                var j = m + b,\r                    n = h[j];\r                h[j] = (n << 8 | n >>> 24) & 16711935 | (n << 24 | n >>> 8) & 4278255360\r            }\r            var b = this._hash.words,\r                j = h[m + 0],\r                n = h[m + 1],\r                l = h[m + 2],\r                q = h[m + 3],\r                t = h[m + 4],\r                s = h[m + 5],\r                u = h[m + 6],\r                v = h[m + 7],\r                w = h[m + 8],\r                x = h[m + 9],\r                y = h[m + 10],\r                z = h[m + 11],\r                A = h[m + 12],\r                B = h[m + 13],\r                C = h[m + 14],\r                D = h[m + 15],\r                c = b[0],\r                d = b[1],\r                e = b[2],\r                f = b[3],\r                c = r(c, d, e, f, j, 7, a[0]),\r                f = r(f, c, d, e, n, 12, a[1]),\r                e = r(e, f, c, d, l, 17, a[2]),\r                d = r(d, e, f, c, q, 22, a[3]),\r                c = r(c, d, e, f, t, 7, a[4]),\r                f = r(f, c, d, e, s, 12, a[5]),\r                e = r(e, f, c, d, u, 17, a[6]),\r                d = r(d, e, f, c, v, 22, a[7]),\r                c = r(c, d, e, f, w, 7, a[8]),\r                f = r(f, c, d, e, x, 12, a[9]),\r                e = r(e, f, c, d, y, 17, a[10]),\r                d = r(d, e, f, c, z, 22, a[11]),\r                c = r(c, d, e, f, A, 7, a[12]),\r                f = r(f, c, d, e, B, 12, a[13]),\r                e = r(e, f, c, d, C, 17, a[14]),\r                d = r(d, e, f, c, D, 22, a[15]),\r                c = k(c, d, e, f, n, 5, a[16]),\r                f = k(f, c, d, e, u, 9, a[17]),\r                e = k(e, f, c, d, z, 14, a[18]),\r                d = k(d, e, f, c, j, 20, a[19]),\r                c = k(c, d, e, f, s, 5, a[20]),\r                f = k(f, c, d, e, y, 9, a[21]),\r                e = k(e, f, c, d, D, 14, a[22]),\r                d = k(d, e, f, c, t, 20, a[23]),\r                c = k(c, d, e, f, x, 5, a[24]),\r                f = k(f, c, d, e, C, 9, a[25]),\r                e = k(e, f, c, d, q, 14, a[26]),\r                d = k(d, e, f, c, w, 20, a[27]),\r                c = k(c, d, e, f, B, 5, a[28]),\r                f = k(f, c,\r                    d, e, l, 9, a[29]),\r                e = k(e, f, c, d, v, 14, a[30]),\r                d = k(d, e, f, c, A, 20, a[31]),\r                c = g(c, d, e, f, s, 4, a[32]),\r                f = g(f, c, d, e, w, 11, a[33]),\r                e = g(e, f, c, d, z, 16, a[34]),\r                d = g(d, e, f, c, C, 23, a[35]),\r                c = g(c, d, e, f, n, 4, a[36]),\r                f = g(f, c, d, e, t, 11, a[37]),\r                e = g(e, f, c, d, v, 16, a[38]),\r                d = g(d, e, f, c, y, 23, a[39]),\r                c = g(c, d, e, f, B, 4, a[40]),\r                f = g(f, c, d, e, j, 11, a[41]),\r                e = g(e, f, c, d, q, 16, a[42]),\r                d = g(d, e, f, c, u, 23, a[43]),\r                c = g(c, d, e, f, x, 4, a[44]),\r                f = g(f, c, d, e, A, 11, a[45]),\r                e = g(e, f, c, d, D, 16, a[46]),\r                d = g(d, e, f, c, l, 23, a[47]),\r                c = p(c, d, e, f, j, 6, a[48]),\r                f = p(f, c, d, e, v, 10, a[49]),\r                e = p(e, f, c, d,\r                    C, 15, a[50]),\r                d = p(d, e, f, c, s, 21, a[51]),\r                c = p(c, d, e, f, A, 6, a[52]),\r                f = p(f, c, d, e, q, 10, a[53]),\r                e = p(e, f, c, d, y, 15, a[54]),\r                d = p(d, e, f, c, n, 21, a[55]),\r                c = p(c, d, e, f, w, 6, a[56]),\r                f = p(f, c, d, e, D, 10, a[57]),\r                e = p(e, f, c, d, u, 15, a[58]),\r                d = p(d, e, f, c, B, 21, a[59]),\r                c = p(c, d, e, f, t, 6, a[60]),\r                f = p(f, c, d, e, z, 10, a[61]),\r                e = p(e, f, c, d, l, 15, a[62]),\r                d = p(d, e, f, c, x, 21, a[63]);\r            b[0] = b[0] + c | 0;\r            b[1] = b[1] + d | 0;\r            b[2] = b[2] + e | 0;\r            b[3] = b[3] + f | 0\r        },\r        _doFinalize: function() {\r            var a = this._data,\r                g = a.words,\r                b = 8 * this._nDataBytes,\r                j = 8 * a.sigBytes;\r            g[j >>> 5] |= 128 << 24 - j % 32;\r            var k = q.floor(b /\r                4294967296);\r            g[(j + 64 >>> 9 << 4) + 15] = (k << 8 | k >>> 24) & 16711935 | (k << 24 | k >>> 8) & 4278255360;\r            g[(j + 64 >>> 9 << 4) + 14] = (b << 8 | b >>> 24) & 16711935 | (b << 24 | b >>> 8) & 4278255360;\r            a.sigBytes = 4 * (g.length + 1);\r            this._process();\r            a = this._hash;\r            g = a.words;\r            for (b = 0; 4 > b; b++) j = g[b], g[b] = (j << 8 | j >>> 24) & 16711935 | (j << 24 | j >>> 8) & 4278255360;\r            return a\r        },\r        clone: function() {\r            var a = u.clone.call(this);\r            a._hash = this._hash.clone();\r            return a\r        }\r    });\r    t.MD5 = u._createHelper(n);\r    t.HmacMD5 = u._createHmacHelper(n)\r})(Math);\r(function() {\r    var q = CryptoJS,\r        r = q.enc.Utf8;\r    q.algo.HMAC = q.lib.Base.extend({\r        init: function(k, g) {\r            k = this._hasher = new k.init;\r            \"string\" == typeof g && (g = r.parse(g));\r            var p = k.blockSize,\r                q = 4 * p;\r            g.sigBytes > q && (g = k.finalize(g));\r            g.clamp();\r            for (var n = this._oKey = g.clone(), v = this._iKey = g.clone(), u = n.words, a = v.words, s = 0; s < p; s++) u[s] ^= 1549556828, a[s] ^= 909522486;\r            n.sigBytes = v.sigBytes = q;\r            this.reset()\r        },\r        reset: function() {\r            var k = this._hasher;\r            k.reset();\r            k.update(this._iKey)\r        },\r        update: function(k) {\r            this._hasher.update(k);\r            return this\r        },\r        finalize: function(k) {\r            var g =\r                this._hasher;\r            k = g.finalize(k);\r            g.reset();\r            return g.finalize(this._oKey.clone().concat(k))\r        }\r    })\r})();\n\n\n\nlet bookId=params.nativeTool.getCache(\"bookId\");\nlet listenId = params.queryInfo.url; //播放的节数\nlet access_token =\"\";\nlet device_id = \"MOBILESITE\";\nlet qingting_id=\"7668753fc53c49b6b49d30d3fe877c04\";\nlet timestamp = (new Date()).valueOf();\n\n\n\n\ns = \"/audiostream/redirect/\" + bookId + \"/\" + listenId+\"?access_token=\"+access_token+\"&device_id=\"+device_id+\"&qingting_id=\"+ qingting_id +\"&t=\"+timestamp;\n\nlet value = s;\nlet key = \"fpMn12&38f_2e\";\n\nlet n = 'https://audio.qtfm.cn';\n\n\nvar hash = CryptoJS.HmacMD5(value, key);  \n //第一个参数为加密字符串，第二个参数为公共秘钥\n\n\nlet url = n + s +  \"&sign=\" +hash.toString();\n\nreturn {'url':url,'httpHeaders':config.httpHeaders,\"POST\":false , 'responseFormatType':'filePath'};",
        "host": "https://www.qtfm.cn",
        "httpHeaders": {
            "Referer": "https://www.qtfm.cn",
            "Cookie": "Cookie: HWWAFSESID=2e8047924f0ac376c2; HWWAFSESTIME=1648450686512; qingting_id=7668753fc53c49b6b49d30d3fe877c04",
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.82 Safari/537.36"
        },
        "parserID": "DOM"
    },
    "shupingList": {
        "actionID": "shupingList",
        "parserID": "DOM"
    },
    "desc": "QQ频道搜【香色闺阁】",
    "password": "99mh99.",
    "shudanList": {},
    "shupingHome": {
        "actionID": "shupingHome",
        "parserID": "DOM"
    },
    "bookDetail": {
        "actionID": "bookDetail",
        "validConfig": "",
        "requestInfo": "@js:\n\n//let url=config.host+\"/channels/\"+result+\"/\";\n\n\nreturn {'url':result,'httpHeaders':config.httpHeaders,\"POST\":false,\"cacheTime\":3600};",
        "host": "https://www.qtfm.cn",
        "cat": "//div[@class=\"album-attrs\"]/a[1]/text()",
        "httpHeaders": {
            "Referer": "https://www.qtfm.cn",
            "Cookie": "Cookie: HWWAFSESID=2e8047924f0ac376c2; HWWAFSESTIME=1648450686512; qingting_id=7668753fc53c49b6b49d30d3fe877c04",
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.82 Safari/537.36"
        },
        "responseFormatType": "html",
        "parserID": "DOM"
    }
}